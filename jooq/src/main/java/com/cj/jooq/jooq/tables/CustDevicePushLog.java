/*
 * This file is generated by jOOQ.
*/
package com.cj.jooq.jooq.tables;


import com.cj.jooq.jooq.Indexes;
import com.cj.jooq.jooq.Keys;
import com.cj.jooq.jooq.Test;
import com.cj.jooq.jooq.tables.records.CustDevicePushLogRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 设备推送日志表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustDevicePushLog extends TableImpl<CustDevicePushLogRecord> {

    private static final long serialVersionUID = 279929247;

    /**
     * The reference instance of <code>test.cust_device_push_log</code>
     */
    public static final CustDevicePushLog CUST_DEVICE_PUSH_LOG = new CustDevicePushLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustDevicePushLogRecord> getRecordType() {
        return CustDevicePushLogRecord.class;
    }

    /**
     * The column <code>test.cust_device_push_log.ID</code>.
     */
    public final TableField<CustDevicePushLogRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>test.cust_device_push_log.CREATE_TIME</code>.
     */
    public final TableField<CustDevicePushLogRecord, LocalDateTime> CREATE_TIME = createField("CREATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>test.cust_device_push_log.CREATE_BY</code>. 创建人用户名
     */
    public final TableField<CustDevicePushLogRecord, String> CREATE_BY = createField("CREATE_BY", org.jooq.impl.SQLDataType.VARCHAR(20), this, "创建人用户名");

    /**
     * The column <code>test.cust_device_push_log.UPDATE_TIME</code>.
     */
    public final TableField<CustDevicePushLogRecord, LocalDateTime> UPDATE_TIME = createField("UPDATE_TIME", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>test.cust_device_push_log.UPDATE_BY</code>. 修改人用户名
     */
    public final TableField<CustDevicePushLogRecord, LocalDateTime> UPDATE_BY = createField("UPDATE_BY", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "修改人用户名");

    /**
     * The column <code>test.cust_device_push_log.USERNAME</code>. 用户名
     */
    public final TableField<CustDevicePushLogRecord, String> USERNAME = createField("USERNAME", org.jooq.impl.SQLDataType.VARCHAR(20), this, "用户名");

    /**
     * The column <code>test.cust_device_push_log.TERMINAL_ID</code>. 设备唯一码
     */
    public final TableField<CustDevicePushLogRecord, String> TERMINAL_ID = createField("TERMINAL_ID", org.jooq.impl.SQLDataType.VARCHAR(40), this, "设备唯一码");

    /**
     * The column <code>test.cust_device_push_log.PUSH_TOKEN</code>. 推送平台下发的设备唯一码
     */
    public final TableField<CustDevicePushLogRecord, String> PUSH_TOKEN = createField("PUSH_TOKEN", org.jooq.impl.SQLDataType.VARCHAR(64), this, "推送平台下发的设备唯一码");

    /**
     * The column <code>test.cust_device_push_log.DEVICE_TYPE</code>. 设备类型. 1:安卓  2:ios
     */
    public final TableField<CustDevicePushLogRecord, String> DEVICE_TYPE = createField("DEVICE_TYPE", org.jooq.impl.SQLDataType.VARCHAR(10), this, "设备类型. 1:安卓  2:ios");

    /**
     * The column <code>test.cust_device_push_log.SEQ</code>. 异步服务中可以通过该字段找到server端返回的对应应答包
     */
    public final TableField<CustDevicePushLogRecord, Integer> SEQ = createField("SEQ", org.jooq.impl.SQLDataType.INTEGER, this, "异步服务中可以通过该字段找到server端返回的对应应答包");

    /**
     * The column <code>test.cust_device_push_log.ENVIRONMENT</code>. 用户指定推送环境.product:生产环境, dev:开发环境
     */
    public final TableField<CustDevicePushLogRecord, String> ENVIRONMENT = createField("ENVIRONMENT", org.jooq.impl.SQLDataType.VARCHAR(40), this, "用户指定推送环境.product:生产环境, dev:开发环境");

    /**
     * The column <code>test.cust_device_push_log.RET_CODE</code>. 错误码
     */
    public final TableField<CustDevicePushLogRecord, Integer> RET_CODE = createField("RET_CODE", org.jooq.impl.SQLDataType.INTEGER, this, "错误码");

    /**
     * The column <code>test.cust_device_push_log.PUSH_ID</code>. 推送id
     */
    public final TableField<CustDevicePushLogRecord, String> PUSH_ID = createField("PUSH_ID", org.jooq.impl.SQLDataType.VARCHAR(50), this, "推送id");

    /**
     * The column <code>test.cust_device_push_log.MESSAGE</code>. 日志内容的描述
     */
    public final TableField<CustDevicePushLogRecord, String> MESSAGE = createField("MESSAGE", org.jooq.impl.SQLDataType.VARCHAR(50), this, "日志内容的描述");

    /**
     * Create a <code>test.cust_device_push_log</code> table reference
     */
    public CustDevicePushLog() {
        this(DSL.name("cust_device_push_log"), null);
    }

    /**
     * Create an aliased <code>test.cust_device_push_log</code> table reference
     */
    public CustDevicePushLog(String alias) {
        this(DSL.name(alias), CUST_DEVICE_PUSH_LOG);
    }

    /**
     * Create an aliased <code>test.cust_device_push_log</code> table reference
     */
    public CustDevicePushLog(Name alias) {
        this(alias, CUST_DEVICE_PUSH_LOG);
    }

    private CustDevicePushLog(Name alias, Table<CustDevicePushLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private CustDevicePushLog(Name alias, Table<CustDevicePushLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "设备推送日志表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CUST_DEVICE_PUSH_LOG_IDX_ID, Indexes.CUST_DEVICE_PUSH_LOG_IDX_USERNAME, Indexes.CUST_DEVICE_PUSH_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CustDevicePushLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CUST_DEVICE_PUSH_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CustDevicePushLogRecord> getPrimaryKey() {
        return Keys.KEY_CUST_DEVICE_PUSH_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CustDevicePushLogRecord>> getKeys() {
        return Arrays.<UniqueKey<CustDevicePushLogRecord>>asList(Keys.KEY_CUST_DEVICE_PUSH_LOG_PRIMARY, Keys.KEY_CUST_DEVICE_PUSH_LOG_IDX_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustDevicePushLog as(String alias) {
        return new CustDevicePushLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustDevicePushLog as(Name alias) {
        return new CustDevicePushLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CustDevicePushLog rename(String name) {
        return new CustDevicePushLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CustDevicePushLog rename(Name name) {
        return new CustDevicePushLog(name, null);
    }
}
