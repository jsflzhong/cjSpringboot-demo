/*
 * This file is generated by jOOQ.
*/
package com.cj.jooq.jooq.tables;


import com.cj.jooq.jooq.Indexes;
import com.cj.jooq.jooq.Keys;
import com.cj.jooq.jooq.Test;
import com.cj.jooq.jooq.tables.records.UPermissionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UPermission extends TableImpl<UPermissionRecord> {

    private static final long serialVersionUID = -254640963;

    /**
     * The reference instance of <code>test.u_permission</code>
     */
    public static final UPermission U_PERMISSION = new UPermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UPermissionRecord> getRecordType() {
        return UPermissionRecord.class;
    }

    /**
     * The column <code>test.u_permission.id</code>.
     */
    public final TableField<UPermissionRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>test.u_permission.url</code>. url地址
     */
    public final TableField<UPermissionRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR(256), this, "url地址");

    /**
     * The column <code>test.u_permission.name</code>. url描述
     */
    public final TableField<UPermissionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "url描述");

    /**
     * The column <code>test.u_permission.permission</code>. 权限字符串,menu例子：role:*，button例子：role:create,role:update,role:delete,role:view
     */
    public final TableField<UPermissionRecord, String> PERMISSION = createField("permission", org.jooq.impl.SQLDataType.VARCHAR(100), this, "权限字符串,menu例子：role:*，button例子：role:create,role:update,role:delete,role:view");

    /**
     * The column <code>test.u_permission.parentId</code>. 父编号
     */
    public final TableField<UPermissionRecord, String> PARENTID = createField("parentId", org.jooq.impl.SQLDataType.VARCHAR(32), this, "父编号");

    /**
     * The column <code>test.u_permission.parentIds</code>. 父编号列表列表
     */
    public final TableField<UPermissionRecord, String> PARENTIDS = createField("parentIds", org.jooq.impl.SQLDataType.VARCHAR(255), this, "父编号列表列表");

    /**
     * Create a <code>test.u_permission</code> table reference
     */
    public UPermission() {
        this(DSL.name("u_permission"), null);
    }

    /**
     * Create an aliased <code>test.u_permission</code> table reference
     */
    public UPermission(String alias) {
        this(DSL.name(alias), U_PERMISSION);
    }

    /**
     * Create an aliased <code>test.u_permission</code> table reference
     */
    public UPermission(Name alias) {
        this(alias, U_PERMISSION);
    }

    private UPermission(Name alias, Table<UPermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private UPermission(Name alias, Table<UPermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.U_PERMISSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UPermissionRecord> getPrimaryKey() {
        return Keys.KEY_U_PERMISSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UPermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<UPermissionRecord>>asList(Keys.KEY_U_PERMISSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UPermission as(String alias) {
        return new UPermission(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UPermission as(Name alias) {
        return new UPermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UPermission rename(String name) {
        return new UPermission(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UPermission rename(Name name) {
        return new UPermission(name, null);
    }
}
