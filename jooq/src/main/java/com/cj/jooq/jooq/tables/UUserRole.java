/*
 * This file is generated by jOOQ.
*/
package com.cj.jooq.jooq.tables;


import com.cj.jooq.jooq.Indexes;
import com.cj.jooq.jooq.Keys;
import com.cj.jooq.jooq.Test;
import com.cj.jooq.jooq.tables.records.UUserRoleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UUserRole extends TableImpl<UUserRoleRecord> {

    private static final long serialVersionUID = -865957435;

    /**
     * The reference instance of <code>test.u_user_role</code>
     */
    public static final UUserRole U_USER_ROLE = new UUserRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UUserRoleRecord> getRecordType() {
        return UUserRoleRecord.class;
    }

    /**
     * The column <code>test.u_user_role.id</code>.
     */
    public final TableField<UUserRoleRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>test.u_user_role.uid</code>. 用户ID
     */
    public final TableField<UUserRoleRecord, String> UID = createField("uid", org.jooq.impl.SQLDataType.VARCHAR(32), this, "用户ID");

    /**
     * The column <code>test.u_user_role.rid</code>. 角色ID
     */
    public final TableField<UUserRoleRecord, String> RID = createField("rid", org.jooq.impl.SQLDataType.VARCHAR(32), this, "角色ID");

    /**
     * Create a <code>test.u_user_role</code> table reference
     */
    public UUserRole() {
        this(DSL.name("u_user_role"), null);
    }

    /**
     * Create an aliased <code>test.u_user_role</code> table reference
     */
    public UUserRole(String alias) {
        this(DSL.name(alias), U_USER_ROLE);
    }

    /**
     * Create an aliased <code>test.u_user_role</code> table reference
     */
    public UUserRole(Name alias) {
        this(alias, U_USER_ROLE);
    }

    private UUserRole(Name alias, Table<UUserRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private UUserRole(Name alias, Table<UUserRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.U_USER_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UUserRoleRecord> getPrimaryKey() {
        return Keys.KEY_U_USER_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UUserRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<UUserRoleRecord>>asList(Keys.KEY_U_USER_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUserRole as(String alias) {
        return new UUserRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUserRole as(Name alias) {
        return new UUserRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UUserRole rename(String name) {
        return new UUserRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UUserRole rename(Name name) {
        return new UUserRole(name, null);
    }
}
