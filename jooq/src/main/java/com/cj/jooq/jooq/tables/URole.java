/*
 * This file is generated by jOOQ.
*/
package com.cj.jooq.jooq.tables;


import com.cj.jooq.jooq.Indexes;
import com.cj.jooq.jooq.Keys;
import com.cj.jooq.jooq.Test;
import com.cj.jooq.jooq.tables.records.URoleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class URole extends TableImpl<URoleRecord> {

    private static final long serialVersionUID = -1417672857;

    /**
     * The reference instance of <code>test.u_role</code>
     */
    public static final URole U_ROLE = new URole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<URoleRecord> getRecordType() {
        return URoleRecord.class;
    }

    /**
     * The column <code>test.u_role.id</code>.
     */
    public final TableField<URoleRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>test.u_role.name</code>. 角色名称,UI页面显示使用
     */
    public final TableField<URoleRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(32), this, "角色名称,UI页面显示使用");

    /**
     * The column <code>test.u_role.role</code>. 角色类型.这是唯一标识.用于程序中判断用.
     */
    public final TableField<URoleRecord, String> ROLE = createField("role", org.jooq.impl.SQLDataType.VARCHAR(10), this, "角色类型.这是唯一标识.用于程序中判断用.");

    /**
     * Create a <code>test.u_role</code> table reference
     */
    public URole() {
        this(DSL.name("u_role"), null);
    }

    /**
     * Create an aliased <code>test.u_role</code> table reference
     */
    public URole(String alias) {
        this(DSL.name(alias), U_ROLE);
    }

    /**
     * Create an aliased <code>test.u_role</code> table reference
     */
    public URole(Name alias) {
        this(alias, U_ROLE);
    }

    private URole(Name alias, Table<URoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private URole(Name alias, Table<URoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.U_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<URoleRecord> getPrimaryKey() {
        return Keys.KEY_U_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<URoleRecord>> getKeys() {
        return Arrays.<UniqueKey<URoleRecord>>asList(Keys.KEY_U_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public URole as(String alias) {
        return new URole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public URole as(Name alias) {
        return new URole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public URole rename(String name) {
        return new URole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public URole rename(Name name) {
        return new URole(name, null);
    }
}
